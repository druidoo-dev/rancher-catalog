.catalog:
  name: "Adhoc Traefik"
  version: "1.3.2"
  description: "(Experimental) Traefik load balancer."
  minimum_rancher_version: v1.3.2
  questions:

    - variable: "http_port"
      description: "Traefik http public port to listen."
      label: "Http port:"
      required: true
      default: 80
      type: "int"

    - variable: "https_port"
      description: "Traefik https public port to listen."
      label: "Https port:"
      required: true
      default: 443
      type: "int"

    - variable: "admin_port"
      description: "Traefik admin public port to listen."
      label: "Admin port:"
      required: true
      default: 8000 
      type: "int"

    - variable: "domain"
      description: "Can be overridden by setting the 'traefik.domain' label on an service."
      label: "Default domain used:"
      required: true
      default: "rancher.localhost"
      type: "string"

    - variable: "Endpoint"
      description: "Endpoint to use when connecting to Rancher."
      label: "Rancher Endpoint:"
      required: true
      default: "http://rancherserver.example.com/v1" 
      type: "string"

    - variable: "AccessKey"
      description: "AccessKey to use when connecting to Rancher."
      label: "Rancher AccessKey:"
      required: true
      default: "XXXXXXXXXXXXXXXXXXXX" 
      type: "string"

    - variable: "SecretKey"
      description: "SecretKey to use when connecting to Rancher."
      label: "Rancher SecretKey:"
      required: true
      default: "XXXXXXXXXXXXXXXXXXXX" 
      type: "string"

    # TODO enable this
    # - variable: "RefreshSeconds"
    #   label: "Polling interval (in seconds):"
    #   required: true
    #   default: 15
    #   type: "int"

    # - variable: "ExposedByDefault"
    #   description: "Expose Rancher services by default in traefik."
    #   label: "Expose by Default:"
    #   required: false
    #   default: false
    #   type: "boolean"

    # - variable: "EnableServiceHealthFilter"
    #   description: "Filter services with unhealthy states and health states."
    #   label: "Enable Service Health Filter:"
    #   required: false
    #   default: false
    #   type: "boolean"

    - variable: "https_enable"
      label: "Enable HTTPS:"
      description: |
        Enable https working mode. If you activate, you need to fill SSL key and SSL crt in order to work.
      default: false
      required: false
      type: "boolean"

    - variable: "ssl_key"
      description: "SSL key to secure the service. *Required if you enable https"
      label: "SSL key"
      type: "multiline"
      required: false
      default: ""

    - variable: "ssl_crt"
      description: "SSL cert to secure the service. *Required if you enable https"
      label: "SSL crt"
      type: "multiline"
      required: false
      default: ""

    - variable: "acme_enable"
      description: "Enable acme support on traefik."
      label: "Enable ACME:"
      required: true
      default: false 
      type: "boolean"

    - variable: "acme_email"
      description: "ACME user email."
      label: "ACME email:"
      required: true
      default: "test@traefik.io" 
      type: "string"

    - variable: "acme_ondemand"
      description: "Enable acme ondemand."
      label: "ACME ondemand:"
      required: true
      default: true 
      type: "boolean"

    - variable: "acme_onhostrule"
      description: "Enable acme onHostRule."
      label: "ACME onHostRule:"
      required: true
      default: true 
      type: "boolean"

#
# Scaling and health checks per service as per docker-compose.yml
#
version: 2
services:
  traefik:
    retain_ip: true
    health_check:
      port: 8080
      interval: 5000
      unhealthy_threshold: 3
      request_line: 'GET /dashboard/# HTTP/1.0'
      healthy_threshold: 2
      response_timeout: 5000
# esto podria llegar a usarse para que con algun curl o algo, en entrypoint
# o algo asi, desde el metadata generemos los archivos
  # metadata:
  #   traefik:
  #     ssl_key: |
  #       ${ssl_key}
  #     ssl_crt: |
  #       ${ssl_crt}
